import turtle
from time import *


# print(myturtle.pos())

def drawSquare(myturtle, x, y, size, myColor="black", angle=0):
    myturtle.penup()
    myturtle.color(myColor)
    myturtle.goto(x, y)
    myturtle.setheading(90)
    myturtle.left(angle)
    myturtle.pendown()
    # myturtle.begin_fill()
    myturtle.right(90)
    myturtle.forward(size)
    myturtle.right(90)
    print(myturtle.pos())
    myturtle.forward(size)
    myturtle.right(90)
    myturtle.forward(size)
    myturtle.right(90)
    myturtle.forward(size)
    # myturtle.end_fill()


def drawTrianglefill(myturtle, x, y, cathetus, myColor="black", angle=0):
    hypothenuse = (cathetus ** 2 + cathetus ** 2) ** 0.5
    myturtle.penup()
    myturtle.color(myColor)
    myturtle.goto(x, y)
    myturtle.setheading(90)
    myturtle.pendown()
    myturtle.begin_fill()
    myturtle.right(angle)
    myturtle.right(45)
    myturtle.forward(hypothenuse)
    myturtle.right(135)
    myturtle.forward(cathetus)
    myturtle.right(90)
    myturtle.forward(cathetus)
    myturtle.end_fill()


def drawTriangle(myturtle, x, y, cathetus, myColor="black", angle=0):
    hypothenuse = (cathetus ** 2 + cathetus ** 2) ** 0.5
    myturtle.penup()
    myturtle.color(myColor)
    myturtle.goto(x, y)
    myturtle.setheading(90)
    myturtle.pendown()
    myturtle.right(angle)
    myturtle.right(45)
    myturtle.forward(hypothenuse)
    myturtle.right(135)
    myturtle.forward(cathetus)
    myturtle.right(90)
    myturtle.forward(cathetus)


def drawTriangleDebug(myturtle, x, y, cathetus, myColor="black", angle=0):
    hypothenuse = (cathetus ** 2 + cathetus ** 2) ** 0.5
    myturtle.penup()
    myturtle.color(myColor)
    myturtle.goto(x, y)
    print(myturtle.pos())
    myturtle.setheading(90)
    myturtle.pendown()
    myturtle.right(angle)
    myturtle.right(45)
    myturtle.forward(hypothenuse)
    print(myturtle.pos())
    myturtle.right(135)
    myturtle.forward(cathetus)
    print(myturtle.pos())
    myturtle.right(90)
    myturtle.forward(cathetus)


def drawParallelogram(myturtle, x, y, shortside, longside, myColor="black", angle=0):
    myturtle.penup()
    myturtle.color(myColor)
    myturtle.goto(x, y)
    myturtle.setheading(90)
    myturtle.pendown()
    # myturtle.begin_fill()
    myturtle.right(angle)
    myturtle.right(45)
    myturtle.forward(shortside)
    myturtle.right(135)
    myturtle.forward(longside)
    myturtle.right(45)
    myturtle.forward(shortside)
    myturtle.right(135)
    myturtle.forward(longside)
    # myturtle.end_fill()


ada = turtle.Turtle()
drawTrianglefill(ada, 100, -50, 40, "orange", 225)
drawTrianglefill(ada, 100, -50, 56, "orange", 180)
drawTrianglefill(ada, 100, -50, 79, "orange", 135)
drawTrianglefill(ada, 44, -218, 79, "orange", 180+135)
drawTriangle(ada, 0, -261, 100, "black", 0)
drawTrianglefill(ada, 100, -261, 56, "orange", 180)
drawTrianglefill(ada, 44, -317, 56, "orange", 0)
drawTriangle(ada,100, -161, 50, "black", 90)
drawTriangle(ada,150, -211, 50, "black", 270)
drawTriangle(ada,100, -111, 50, "black", 90)
drawTriangle(ada,150, -161, 50, "black", 270)
drawTrianglefill(ada, 150, -111, 35, "black", 225)
drawTriangle(ada,100, -211, 50, "black", 90)
drawTriangle(ada,150, -261, 50, "black", 270)
drawTriangle(ada,150, -161, 100, "black", 90)
drawSquare(ada, 100,-261, 50, "black", 0)
drawParallelogram(ada, 150,-311, 25, 60, "black", -45)

drawTriangle(ada, -200, 200, 40, "brown", 0)
drawTriangle(ada, -160, 200, 40, "black", 180)
drawTriangle(ada, -240, 240, 40, "black", 90)
drawTriangle(ada, -200, 160, 40, "brown", -90)
drawTriangle(ada, -220, 220, 28, "black", 45)
drawTriangle(ada, -220, 140, 28, "black", 315)
drawTriangle(ada, -200, 160, 28, "black", -225)
drawSquare(ada, -200, 160, 56, "black", 45)
drawTriangleDebug(ada, -200, 80, 56, "black", 315)
drawTriangle(ada, -80, 120, 56, "black", -135)
drawTriangle(ada, -160, 120, 28, "black", 135)
drawTriangle(ada, -160, 120, 28, "black", 135)
drawParallelogram(ada, -160, 120, 30, 60, "black", 0)
sleep(1000)
